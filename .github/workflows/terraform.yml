name: Terraform

on:
  push:
    branches:
      - main

jobs:
  dev:
    name: "Developpement"
    runs-on: ubuntu-latest

    environment:
      name: dev

    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
      WORKING_DIRECTORY_CODE: ./dev/code
      WORKING_DIRECTORY_TESTS: ./dev/tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Run tests
        uses: azure/login@v1
        with:
          client-id: ${{secrets.TF_ARM_CLIENT_ID}}
          client-secret: ${{secrets.TF_ARM_CLIENT_SECRET}}
          tenant-id: ${{secrets.TF_ARM_TENANT_ID}}
          subscription-id: ${{secrets.TF_ARM_SUBSCRIPTION_ID}} 
          enable-AzPSSession: true
        run: ./Test.ps1
        shell: pwsh
        working-directory: ${{env.WORKING_DIRECTORY_TESTS}}

      - name: Terraform Destroy
        if: failure() || always()
        run: terraform destroy -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

  accept:
    name: "Acceptation"
    runs-on: ubuntu-latest
    needs: [dev]

    environment:
      name: accept

    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
      WORKING_DIRECTORY_CODE: ./accept/code
      WORKING_DIRECTORY_TESTS: ./accept/tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Run tests
        run: ./Test.ps1
        shell: pwsh
        working-directory: ${{env.WORKING_DIRECTORY_TESTS}}

      - name: Terraform Destroy
        if: failure() || always()
        run: terraform destroy -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

  prod:
    name: "Production"
    runs-on: ubuntu-latest
    needs: [accept]

    environment:
      name: prod

    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
      WORKING_DIRECTORY_CODE: ./prod/code
      WORKING_DIRECTORY_TESTS: ./prod/tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}

      - name: Run tests
        run: ./Test.ps1
        shell: pwsh
        working-directory: ${{env.WORKING_DIRECTORY_TESTS}}

      - name: Terraform destroy
        if: failure() || always()
        run: terraform destroy -auto-approve
        working-directory: ${{env.WORKING_DIRECTORY_CODE}}
